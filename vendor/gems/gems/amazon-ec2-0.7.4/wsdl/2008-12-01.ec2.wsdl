<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://ec2.amazonaws.com/doc/2008-12-01/"
  targetNamespace="http://ec2.amazonaws.com/doc/2008-12-01/">

  <types>
		<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
		           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		           xmlns:tns="http://ec2.amazonaws.com/doc/2008-12-01/"
		           targetNamespace="http://ec2.amazonaws.com/doc/2008-12-01/"    
		           elementFormDefault="qualified">
		  
		  <xs:annotation>
		    <xs:documentation xml:lang="en">
		      
		    </xs:documentation>
		  </xs:annotation>
		  
		  <!-- RegisterImage request definitions -->
		  
		  <xs:element name="RegisterImage" type="tns:RegisterImageType"/>
		
		  <xs:complexType name="RegisterImageType">
		    <xs:sequence>
		      <xs:element name="imageLocation" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- RegisterImage response definitions -->
		
		  <xs:element name="RegisterImageResponse" type="tns:RegisterImageResponseType"/>
		  <xs:complexType name="RegisterImageResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="imageId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeregisterImage request definitions -->
		
		  <xs:element name="DeregisterImage" type="tns:DeregisterImageType"/>
		
		  <xs:complexType name="DeregisterImageType">
		    <xs:sequence>
		      <xs:element name="imageId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeregisterImage response definitions -->
		
		  <xs:element name="DeregisterImageResponse" type="tns:DeregisterImageResponseType"/>
		
		  <xs:complexType name="DeregisterImageResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CreateKeyPair request definitions -->
		  
		  <xs:element name="CreateKeyPair" type="tns:CreateKeyPairType"/>
		
		  <xs:complexType name="CreateKeyPairType">
		    <xs:sequence>
		      <xs:element name="keyName" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CreateKeyPair response definitions -->
		
		  <xs:element name="CreateKeyPairResponse" type="tns:CreateKeyPairResponseType"/>
		  
		  <xs:complexType name="CreateKeyPairResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="keyName" type="xs:string"/>
		      <xs:element name="keyFingerprint" type="xs:string"/>
		      <xs:element name="keyMaterial" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeleteKeyPair request definitions -->
		  
		  <xs:element name="DeleteKeyPair" type="tns:DeleteKeyPairType" />
		
		  <xs:complexType name="DeleteKeyPairType">
		    <xs:sequence>
		      <xs:element name="keyName" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeleteKeyPair response definitions -->
		
		  <xs:element name="DeleteKeyPairResponse" type="tns:DeleteKeyPairResponseType"/>
		  
		  <xs:complexType name="DeleteKeyPairResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeKeyPairs Request definitions -->
		
		  <xs:element name="DescribeKeyPairs" type="tns:DescribeKeyPairsType"/>
		
		  <xs:complexType name="DescribeKeyPairsType">
		    <xs:sequence>
		      <xs:element name="keySet" type="tns:DescribeKeyPairsInfoType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeKeyPairsInfoType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeKeyPairsItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeKeyPairsItemType">
		    <xs:sequence>
		      <xs:element name="keyName" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeKeyPairs Response definitions -->
		
		  <xs:element name="DescribeKeyPairsResponse" type="tns:DescribeKeyPairsResponseType"/>
		  
		  <xs:complexType name="DescribeKeyPairsResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="keySet" type="tns:DescribeKeyPairsResponseInfoType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeKeyPairsResponseInfoType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeKeyPairsResponseItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeKeyPairsResponseItemType">
		    <xs:sequence>
		      <xs:element name="keyName" type="xs:string" />
		      <xs:element name="keyFingerprint" type="xs:string" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- RunInstances request definitions -->
		
		  <xs:element name="RunInstances" type="tns:RunInstancesType"/>
		
		  <xs:complexType name="RunInstancesType">
		    <xs:sequence>
		      <xs:element name="imageId" type="xs:string"/>
		      <xs:element name="minCount" type="xs:int"/>
		      <xs:element name="maxCount" type="xs:int"/>
		      <xs:element name="keyName" type="xs:string" minOccurs="0" />
		      <xs:element name="groupSet" type="tns:GroupSetType"/>
		      <xs:element name="additionalInfo" type="xs:string" minOccurs="0"/>
		      <xs:element name="userData" type="tns:UserDataType" minOccurs="0" maxOccurs="1"/>
		      <xs:element name="addressingType" type="xs:string" minOccurs="0" maxOccurs="1"/>
		      <xs:element name="instanceType" type="xs:string" />
		      <xs:element name="placement" type="tns:PlacementRequestType" minOccurs="0" maxOccurs="1" />
		      <xs:element name="kernelId" type="xs:string" minOccurs="0" maxOccurs="1"/>
		      <xs:element name="ramdiskId" type="xs:string" minOccurs="0" maxOccurs="1"/>
		      <xs:element name="blockDeviceMapping" type="tns:BlockDeviceMappingType" minOccurs="0" maxOccurs="1" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="GroupSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:GroupItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="GroupItemType">
		    <xs:sequence>
		      <xs:element name="groupId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="UserDataType" mixed="true">
		    <xs:sequence>
		      <xs:element name="data" type="xs:string"/>
		    </xs:sequence>
		    <xs:attribute name="version" type="xs:string" use="required" fixed="1.0"/>
		    <xs:attribute name="encoding" type="xs:string" use="required" fixed="base64"/>
		  </xs:complexType>
		
		  <xs:complexType name="BlockDeviceMappingType"> 
		    <xs:sequence> 
		      <xs:element name="item" type="tns:BlockDeviceMappingItemType" minOccurs="0" maxOccurs="unbounded" /> 
		    </xs:sequence> 
		  </xs:complexType> 
		
		  <xs:complexType name="BlockDeviceMappingItemType"> 
		    <xs:sequence> 
		      <xs:element name="virtualName" type="xs:string"/> 
		      <xs:element name="deviceName" type="xs:string"/> 
		    </xs:sequence> 
		  </xs:complexType> 
		
		  <xs:complexType name="PlacementRequestType"> 
		    <xs:sequence> 
		      <xs:element name="availabilityZone" type="xs:string" minOccurs="0" maxOccurs="1" /> 
		    </xs:sequence> 
		  </xs:complexType> 
		
		  <!-- RunInstances response definitions -->
		
		  <xs:element name="RunInstancesResponse" type="tns:RunInstancesResponseType"/>
		  
		  <xs:complexType name="RunInstancesResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="reservationId" type="xs:string"/>
		      <xs:element name="ownerId" type="xs:string"/>
		      <xs:element name="groupSet" type="tns:GroupSetType"/>
		      <xs:element name="instancesSet" type="tns:RunningInstancesSetType"/>
		      <xs:element name="requesterId" type="xs:string" minOccurs="0"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="ReservationInfoType">
		    <xs:sequence>
		      <xs:element name="reservationId" type="xs:string"/>
		      <xs:element name="ownerId" type="xs:string"/>
		      <xs:element name="groupSet" type="tns:GroupSetType"/>
		      <xs:element name="instancesSet" type="tns:RunningInstancesSetType"/>
		      <xs:element name="requesterId" type="xs:string" minOccurs="0"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="RunningInstancesSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:RunningInstancesItemType" minOccurs="1" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="RunningInstancesItemType">
		    <xs:sequence>
		      <xs:element name="instanceId" type="xs:string"/>
		      <xs:element name="imageId" type="xs:string"/>
		      <xs:element name="instanceState" type="tns:InstanceStateType"/>
		      <xs:element name="privateDnsName" type="xs:string"/>
		      <xs:element name="dnsName" type="xs:string"/>
		      <xs:element name="reason" type="xs:string" minOccurs="0"/>
		      <xs:element name="keyName" type="xs:string" minOccurs="0"/>
		      <xs:element name="amiLaunchIndex" type="xs:string" minOccurs="0" maxOccurs="1"/>
		      <xs:element name="productCodes" type="tns:ProductCodesSetType" minOccurs="0" maxOccurs="1" />
		      <xs:element name="instanceType" type="xs:string"/>
		      <xs:element name="launchTime" type="xs:dateTime" />
		      <xs:element name="placement" type="tns:PlacementResponseType" minOccurs="0"/>
		      <xs:element name="kernelId" type="xs:string" minOccurs="0"/>
		      <xs:element name="ramdiskId" type="xs:string" minOccurs="0"/>
		      <xs:element name="platform" type="xs:string" minOccurs="0"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="PlacementResponseType">
		    <xs:sequence> 
		      <xs:element name="availabilityZone" type="xs:string" /> 
		    </xs:sequence> 
		  </xs:complexType> 
		
		  <!-- GetConsoleOutput request definitions -->
		
		  <xs:element name="GetConsoleOutput" type="tns:GetConsoleOutputType"/>
		
		  <xs:complexType name="GetConsoleOutputType">
		    <xs:sequence>
		      <xs:element name="instanceId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- GetConsoleOutput response definitions -->
		
		  <xs:element name="GetConsoleOutputResponse" type="tns:GetConsoleOutputResponseType"/>
		
		  <xs:complexType name="GetConsoleOutputResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="instanceId" type="xs:string" />
		      <xs:element name="timestamp" type="xs:dateTime" />
		      <xs:element name="output" type="xs:string" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- TerminateInstances request definitions -->
		
		  <xs:element name="TerminateInstances" type="tns:TerminateInstancesType"/>
		
		  <xs:complexType name="TerminateInstancesType">
		    <xs:sequence>
		      <xs:element name="instancesSet" type="tns:TerminateInstancesInfoType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="TerminateInstancesInfoType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:TerminateInstancesItemType" minOccurs="1" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="TerminateInstancesItemType">
		    <xs:sequence>
		      <xs:element name="instanceId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- TerminateInstances response definitions -->
		
		  <xs:element name="TerminateInstancesResponse" type="tns:TerminateInstancesResponseType"/>
		
		  <xs:complexType name="TerminateInstancesResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="instancesSet" type="tns:TerminateInstancesResponseInfoType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="TerminateInstancesResponseInfoType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:TerminateInstancesResponseItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="TerminateInstancesResponseItemType">
		    <xs:sequence>
		      <xs:element name="instanceId" type="xs:string" />
		      <xs:element name="shutdownState" type="tns:InstanceStateType" />
		      <xs:element name="previousState" type="tns:InstanceStateType" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- RebootInstances request definitions -->
		  <xs:element name="RebootInstances" type="tns:RebootInstancesType"/>
		
		  <xs:complexType name="RebootInstancesType">
		    <xs:sequence>
		      <xs:element name="instancesSet" type="tns:RebootInstancesInfoType"/>
		    </xs:sequence>
		  </xs:complexType>
		  
		  <xs:complexType name="RebootInstancesInfoType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:RebootInstancesItemType" minOccurs="1" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="RebootInstancesItemType">
		    <xs:sequence>
		      <xs:element name="instanceId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- RebootInstances response definitions -->
		
		  <xs:element name="RebootInstancesResponse" type="tns:RebootInstancesResponseType"/>
		
		  <xs:complexType name="RebootInstancesResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeInstances Request definitions -->
		
		  <xs:element name="DescribeInstances" type="tns:DescribeInstancesType"/>
		
		  <xs:complexType name="DescribeInstancesType">
		    <xs:sequence>
		      <xs:element name="instancesSet" type="tns:DescribeInstancesInfoType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeInstancesInfoType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeInstancesItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeInstancesItemType">
		    <xs:sequence>
		      <xs:element name="instanceId" type="xs:string" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeInstances Response definitions -->
		
		  <xs:element name="DescribeInstancesResponse" type="tns:DescribeInstancesResponseType"/>
		  
		  <xs:complexType name="DescribeInstancesResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="reservationSet" type="tns:ReservationSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="ReservationSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:ReservationInfoType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeImages Request definitions -->
		
		  <xs:element name="DescribeImages" type="tns:DescribeImagesType"/>
		
		  <xs:complexType name="DescribeImagesType">
		    <xs:sequence>
		      <xs:element name="executableBySet" type="tns:DescribeImagesExecutableBySetType" minOccurs="0"/>
		      <xs:element name="imagesSet" type="tns:DescribeImagesInfoType"/>
		      <xs:element name="ownersSet" type="tns:DescribeImagesOwnersType" minOccurs="0"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeImagesInfoType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeImagesItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeImagesItemType">
		    <xs:sequence>
		      <xs:element name="imageId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		  
		  <xs:complexType name="DescribeImagesOwnersType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeImagesOwnerType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeImagesOwnerType">
		    <xs:sequence>
		      <xs:element name="owner" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		  
		  <xs:complexType name="DescribeImagesExecutableBySetType" >
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeImagesExecutableByType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		  
		  <xs:complexType name="DescribeImagesExecutableByType" >
		    <xs:sequence>
		      <xs:element name="user" type="xs:string" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeImages Response definitions -->
		
		  <xs:element name="DescribeImagesResponse" type="tns:DescribeImagesResponseType"/>
		  
		  <xs:complexType name="DescribeImagesResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="imagesSet" type="tns:DescribeImagesResponseInfoType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeImagesResponseInfoType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeImagesResponseItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeImagesResponseItemType">
		    <xs:sequence>
		      <xs:element name="imageId" type="xs:string" />
		      <xs:element name="imageLocation" type="xs:string" />
		      <xs:element name="imageState" type="xs:string" />
		      <xs:element name="imageOwnerId" type="xs:string" />
		      <xs:element name="isPublic" type="xs:boolean" />
		      <xs:element name="productCodes" type="tns:ProductCodesSetType" minOccurs="0" />
		      <xs:element name="architecture" type="xs:string"  minOccurs="0"/>
		      <xs:element name="imageType" type="xs:string"  minOccurs="0"/>
		      <xs:element name="kernelId" type="xs:string"  minOccurs="0"/>
		      <xs:element name="ramdiskId" type="xs:string"  minOccurs="0"/>
		      <xs:element name="platform" type="xs:string"  minOccurs="0"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CreateSecurityGroup Request definitions -->
		
		  <xs:element name="CreateSecurityGroup" 
		              type="tns:CreateSecurityGroupType"/>
		
		  <xs:complexType name="CreateSecurityGroupType">
		    <xs:sequence>
		      <xs:element name="groupName" type="xs:string"/>
		      <xs:element name="groupDescription" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CreateSecurityGroup Response definitions -->
		
		  <xs:element name="CreateSecurityGroupResponse" 
		              type="tns:CreateSecurityGroupResponseType"/>
		
		  <xs:complexType name="CreateSecurityGroupResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeleteSecurityGroup Request definitions -->
		
		  <xs:element name="DeleteSecurityGroup" 
		              type="tns:DeleteSecurityGroupType"/>
		
		  <xs:complexType name="DeleteSecurityGroupType">
		    <xs:sequence>
		      <xs:element name="groupName" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeleteSecurityGroup Response definitions -->
		
		  <xs:element name="DeleteSecurityGroupResponse" 
		              type="tns:DeleteSecurityGroupResponseType"/>
		
		  <xs:complexType name="DeleteSecurityGroupResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeSecurityGroups Request definitions -->
		
		  <xs:element name="DescribeSecurityGroups" 
		              type="tns:DescribeSecurityGroupsType"/>
		
		  <xs:complexType name="DescribeSecurityGroupsType">
		    <xs:sequence>
		      <xs:element name="securityGroupSet" type="tns:DescribeSecurityGroupsSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeSecurityGroupsSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeSecurityGroupsSetItemType"
		                  minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeSecurityGroupsSetItemType">
		    <xs:sequence>
		      <xs:element name="groupName" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeSecurityGroups Response definitions -->
		
		  <xs:element name="DescribeSecurityGroupsResponse" 
		              type="tns:DescribeSecurityGroupsResponseType"/>
		
		  <xs:complexType name="DescribeSecurityGroupsResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="securityGroupInfo" type="tns:SecurityGroupSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="IpPermissionSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:IpPermissionType"
		                  minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="IpPermissionType">
		    <xs:sequence>
		      <xs:element name="ipProtocol" type="xs:string"/>
		      <xs:element name="fromPort" type="xs:int"/>
		      <xs:element name="toPort" type="xs:int"/>
		      <xs:element name="groups" type="tns:UserIdGroupPairSetType"/>
		      <xs:element name="ipRanges" type="tns:IpRangeSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="IpRangeSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:IpRangeItemType"
		                  minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="IpRangeItemType">
		    <xs:sequence>
		      <xs:element name="cidrIp" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="UserIdGroupPairSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:UserIdGroupPairType" 
		                  minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="UserIdGroupPairType">
		    <xs:sequence>
		      <xs:element name="userId" type="xs:string"/>
		      <xs:element name="groupName" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="SecurityGroupSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:SecurityGroupItemType" 
		                  minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="SecurityGroupItemType">
		    <xs:sequence>
		      <xs:element name="ownerId" type="xs:string"/>
		      <xs:element name="groupName" type="xs:string"/>
		      <xs:element name="groupDescription" type="xs:string"/>      
		      <xs:element name="ipPermissions" type="tns:IpPermissionSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- AuthorizeSecurityGroupIngress Request definitions -->
		
		  <xs:annotation>
		    <xs:documentation xml:lang="en">
		      This API call should be treated as under development. The current API specification supports a richer
		      set of semantics than we intend to retain in future releases, and the details for this call are still under
		      review. Semantically, clients can depend on fine grained CIDR based access control (as currently exposed) but
		      for group based access control clients should only depend on the ability to control access for an entire
		      (user,group) tuple. Fine grained group based access control at the protocol and port or icmp code:type level
		      are not guaranteed to be supported in future releases of this API.
		    </xs:documentation>
		  </xs:annotation>
		
		  <xs:element name="AuthorizeSecurityGroupIngress" 
		              type="tns:AuthorizeSecurityGroupIngressType"/>
		
		  <xs:complexType name="AuthorizeSecurityGroupIngressType">
		    <xs:sequence>
		      <xs:element name="userId" type="xs:string"/>
		      <xs:element name="groupName" type="xs:string"/>
		      <xs:element name="ipPermissions" type="tns:IpPermissionSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- AuthorizeSecurityGroupIngress Response definitions -->
		
		  <xs:element name="AuthorizeSecurityGroupIngressResponse" 
		              type="tns:AuthorizeSecurityGroupIngressResponseType"/>
		
		  <xs:complexType name="AuthorizeSecurityGroupIngressResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- RevokeSecurityGroupIngress Request definitions -->
		
		  <xs:annotation>
		    <xs:documentation xml:lang="en">
		      This API call should be treated as under development. The current API specification supports a richer
		      set of semantics than we intend to retain in future releases, and the details for this call are still under
		      review. Semantically, clients can depend on fine grained CIDR based access control (as currently exposed) but
		      for group based access control clients should only depend on the ability to control access for an entire
		      (user,group) tuple. Fine grained group based access control at the protocol and port or icmp code:type level
		      are not guaranteed to be supported in future releases of this API.
		    </xs:documentation>
		  </xs:annotation>
		
		  <xs:element name="RevokeSecurityGroupIngress" 
		              type="tns:RevokeSecurityGroupIngressType"/>
		
		  <xs:complexType name="RevokeSecurityGroupIngressType">
		    <xs:sequence>
		      <xs:element name="userId" type="xs:string"/>
		      <xs:element name="groupName" type="xs:string"/>
		      <xs:element name="ipPermissions" type="tns:IpPermissionSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- RevokeSecurityGroupIngress Response definitions -->
		
		  <xs:element name="RevokeSecurityGroupIngressResponse" 
		              type="tns:RevokeSecurityGroupIngressResponseType"/>
		
		  <xs:complexType name="RevokeSecurityGroupIngressResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- Instance state type definition -->
		
		  <xs:complexType name="InstanceStateType">
		    <xs:sequence>
		      <xs:element name="code" type="xs:int"/>
		      <xs:element name="name" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		  
		  <!-- ModifyImageAttribute Definitions -->
		  
		  <xs:element name="ModifyImageAttribute"
		              type="tns:ModifyImageAttributeType"/>
		  
		  <xs:complexType name="ModifyImageAttributeType">
		    <xs:sequence>
		      <xs:element name="imageId" type="xs:string"/>
		      <xs:choice>
		      <xs:element name="launchPermission" type="tns:LaunchPermissionOperationType"/>
		      <xs:element name="productCodes" type="tns:ProductCodeListType" />
		      </xs:choice>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="LaunchPermissionOperationType">
		    <xs:choice>
		      <xs:element name="add" type="tns:LaunchPermissionListType"/>
		      <xs:element name="remove" type="tns:LaunchPermissionListType"/>
		    </xs:choice>
		  </xs:complexType>
		
		  <xs:complexType name="LaunchPermissionListType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:LaunchPermissionItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="LaunchPermissionItemType">
		    <xs:choice>
		      <xs:element name="userId" type="xs:string"/>
		      <xs:element name="group" type="xs:string" />
		    </xs:choice>
		  </xs:complexType>
		
		  <xs:complexType name="ProductCodeListType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:ProductCodeItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="ProductCodeItemType">
		    <xs:choice>
		      <xs:element name="productCode" type="xs:string"/>
		    </xs:choice>
		  </xs:complexType>
		
		  <!-- ModifyImageAttributeResponse Definitions -->
		
		  <xs:element name="ModifyImageAttributeResponse"
		              type="tns:ModifyImageAttributeResponseType" />
		              
		  <xs:complexType name="ModifyImageAttributeResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		  
		  <!-- ResetImageAttribute Definitions -->
		  
		  <xs:element name="ResetImageAttribute"
		              type="tns:ResetImageAttributeType" />
		             
		  <xs:complexType name="ResetImageAttributeType" >
		    <xs:sequence>
		      <xs:element name="imageId" type="xs:string"/>
		      <xs:group ref="tns:ResetImageAttributesGroup"/>
		    </xs:sequence>
		  </xs:complexType>
		  
		  <xs:group name="ResetImageAttributesGroup" >
		    <xs:choice>
		      <xs:element name="launchPermission" type="tns:EmptyElementType"/>
		    </xs:choice>
		  </xs:group>
		  
		  <xs:complexType name="EmptyElementType">
		  </xs:complexType>
		
		  <!-- ResetImageAttributeResponse Definitions -->
		
		  <xs:element name="ResetImageAttributeResponse"
		              type="tns:ResetImageAttributeResponseType" />
		
		  <xs:complexType name="ResetImageAttributeResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean" />
		    </xs:sequence>
		  </xs:complexType>
		  
		  <!-- DescribeImageAttribute Definitions -->
		  
		  <xs:element name="DescribeImageAttribute"
		              type="tns:DescribeImageAttributeType" />
		
		  <xs:complexType name="DescribeImageAttributeType">
		    <xs:sequence>
		      <xs:element name="imageId" type="xs:string" />
		      <xs:group ref="tns:DescribeImageAttributesGroup" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:group name="DescribeImageAttributesGroup" >
		    <xs:choice>
		      <xs:element name="launchPermission" type="tns:EmptyElementType"/>
		      <xs:element name="productCodes" type="tns:EmptyElementType" />
		      <xs:element name="kernel" type="tns:EmptyElementType" />
		      <xs:element name="ramdisk" type="tns:EmptyElementType" />
		      <xs:element name="blockDeviceMapping" type="tns:EmptyElementType" />
		    </xs:choice>
		  </xs:group>
		
		  <!-- DescribeImageAttributeResponse Definitions -->
		  
		  <xs:element name="DescribeImageAttributeResponse"
		              type="tns:DescribeImageAttributeResponseType" />
		              
		  <xs:complexType name="DescribeImageAttributeResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="imageId" type="xs:string" />
		      <xs:choice>
		        <xs:element name="launchPermission" type="tns:LaunchPermissionListType"/>
		        <xs:element name="productCodes" type="tns:ProductCodeListType" />
		        <xs:element name="kernel" type="tns:NullableAttributeValueType" />
		        <xs:element name="ramdisk" type="tns:NullableAttributeValueType" />
		        <xs:element name="blockDeviceMapping" type="tns:BlockDeviceMappingType"/>
		      </xs:choice>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="NullableAttributeValueType">
		    <xs:sequence>
		      <xs:element name="value" type="xs:string" minOccurs="0"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="AttributeValueType">
		    <xs:sequence>
		      <xs:element name="value" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- ConfirmProductInstance Definitions -->
		  
		  <xs:element name="ConfirmProductInstance" 
		              type="tns:ConfirmProductInstanceType" />
		
		  <xs:complexType name="ConfirmProductInstanceType" >
		    <xs:sequence>
		      <xs:element name="productCode" type="xs:string" />
		      <xs:element name="instanceId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		  
		  <xs:complexType name="ProductCodesSetType" >
		    <xs:sequence>
		      <xs:element name="item" type="tns:ProductCodesSetItemType" minOccurs="0" maxOccurs="unbounded" />
		    </xs:sequence>
		  </xs:complexType>
		  
		  <xs:complexType name="ProductCodesSetItemType" >
		    <xs:sequence>
		      <xs:element name="productCode" type="xs:string" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- ConfirmProductInstanceResponse Definitions -->
		  
		  <xs:element name="ConfirmProductInstanceResponse" 
		              type="tns:ConfirmProductInstanceResponseType" />
		  
		  <xs:complexType name="ConfirmProductInstanceResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean" />
		      <xs:element name="ownerId" type="xs:string" minOccurs="0" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeAvailabilityZones Definitions -->
		
		  <xs:element name="DescribeAvailabilityZones" 
		              type="tns:DescribeAvailabilityZonesType" />
		
		  <xs:complexType name="DescribeAvailabilityZonesType">
		    <xs:sequence>
		      <xs:element name="availabilityZoneSet" type="tns:DescribeAvailabilityZonesSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeAvailabilityZonesSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeAvailabilityZonesSetItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeAvailabilityZonesSetItemType">
		    <xs:sequence>
		      <xs:element name="zoneName" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeAvailabilityZones Response definitions -->
		
		  <xs:element name="DescribeAvailabilityZonesResponse" 
		              type="tns:DescribeAvailabilityZonesResponseType"/>
		
		  <xs:complexType name="DescribeAvailabilityZonesResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="availabilityZoneInfo" type="tns:AvailabilityZoneSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="AvailabilityZoneSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:AvailabilityZoneItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="AvailabilityZoneItemType">
		    <xs:sequence>
		      <xs:element name="zoneName" type="xs:string"/>
		      <xs:element name="zoneState" type="xs:string"/>
		      <xs:element name="regionName" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- AllocateAddress definitions -->
		  
		  <xs:element name='AllocateAddress' type='tns:AllocateAddressType'/>
		  <xs:complexType name='AllocateAddressType'/>
		
		  <!-- AllocateAddressResponse definitions -->
		  
		  <xs:element name='AllocateAddressResponse' type='tns:AllocateAddressResponseType'/>
		  <xs:complexType name='AllocateAddressResponseType'>
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name='publicIp' type='xs:string'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- ReleaseAddress definitions -->
		  
		  <xs:element name='ReleaseAddress' type='tns:ReleaseAddressType'/>
		  <xs:complexType name='ReleaseAddressType'>
		    <xs:sequence>
		      <xs:element name='publicIp' type='xs:string'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- ReleaseAddressResponse definitions -->
		  
		  <xs:element name='ReleaseAddressResponse' type='tns:ReleaseAddressResponseType'/>
		  <xs:complexType name='ReleaseAddressResponseType'>
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name='return' type='xs:boolean'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeAddresses definitions -->
		  
		  <xs:element name='DescribeAddresses' type='tns:DescribeAddressesType'/>
		  <xs:complexType name='DescribeAddressesType'>
		    <xs:sequence>
		      <xs:element name='publicIpsSet' type='tns:DescribeAddressesInfoType'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name='DescribeAddressesInfoType'>
		    <xs:sequence>
		      <xs:element name='item' maxOccurs='unbounded' minOccurs='0' type='tns:DescribeAddressesItemType'/>
		    </xs:sequence>
		
		  </xs:complexType>
		
		  <xs:complexType name='DescribeAddressesItemType'>
		    <xs:sequence>
		      <xs:element name='publicIp' type='xs:string'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeAddressesResponse definitions -->
		
		  <xs:element name='DescribeAddressesResponse' type='tns:DescribeAddressesResponseType'/>
		  <xs:complexType name='DescribeAddressesResponseType'>
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name='addressesSet' type='tns:DescribeAddressesResponseInfoType'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name='DescribeAddressesResponseInfoType'>
		    <xs:sequence>
		      <xs:element name='item' maxOccurs='unbounded' minOccurs='0' type='tns:DescribeAddressesResponseItemType'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name='DescribeAddressesResponseItemType'>
		    <xs:sequence>
		      <xs:element name='publicIp' type='xs:string'/>
		      <xs:element name='instanceId' minOccurs='0' type='xs:string'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- AssociateAddress definitions -->
		  
		  <xs:element name='AssociateAddress' type='tns:AssociateAddressType'/>
		  <xs:complexType name='AssociateAddressType'>
		    <xs:sequence>
		      <xs:element name='publicIp' type='xs:string'/>
		      <xs:element name='instanceId' type='xs:string'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- AssociateAddressResponse definitions -->
		  
		  <xs:element name='AssociateAddressResponse' type='tns:AssociateAddressResponseType'/>
		  <xs:complexType name='AssociateAddressResponseType'>
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name='return' type='xs:boolean'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DisassociateAddress definitions -->
		  
		  <xs:element name='DisassociateAddress' type='tns:DisassociateAddressType'/>
		  <xs:complexType name='DisassociateAddressType'>
		    <xs:sequence>
		      <xs:element name='publicIp' type='xs:string'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DisassociateAddressResponse definitions -->
		  
		  <xs:element name='DisassociateAddressResponse' type='tns:DisassociateAddressResponseType'/>
		  <xs:complexType name='DisassociateAddressResponseType'>
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name='return' type='xs:boolean'/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CreateVolume request definitions -->
		  
		  <xs:element name="CreateVolume" type="tns:CreateVolumeType"/>
		
		  <xs:complexType name="CreateVolumeType">
		    <xs:sequence>
		      <xs:element name="size" type="xs:string" minOccurs="0"/>
		      <xs:element name="snapshotId" type="xs:string" minOccurs="0"/>
		      <xs:element name="availabilityZone" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CreateVolume response definitions -->
		
		  <xs:element name="CreateVolumeResponse" type="tns:CreateVolumeResponseType"/>
		  
		  <xs:complexType name="CreateVolumeResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="volumeId" type="xs:string"/>
		      <xs:element name="size" type="xs:string"/>
		      <xs:element name="snapshotId" type="xs:string"/>
		      <xs:element name="availabilityZone" type="xs:string"/>
		      <xs:element name="status" type="xs:string"/>
		      <xs:element name="createTime" type="xs:dateTime"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeleteVolume request definitions -->
		  
		  <xs:element name="DeleteVolume" type="tns:DeleteVolumeType"/>
		
		  <xs:complexType name="DeleteVolumeType">
		    <xs:sequence>
		      <xs:element name="volumeId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeleteVolume response definitions -->
		
		  <xs:element name="DeleteVolumeResponse" type="tns:DeleteVolumeResponseType"/>
		  
		  <xs:complexType name="DeleteVolumeResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeVolumes request definitions -->
		  
		  <xs:element name="DescribeVolumes" 
		              type="tns:DescribeVolumesType" />
		
		  <xs:complexType name="DescribeVolumesType">
		    <xs:sequence>
		      <xs:element name="volumeSet" type="tns:DescribeVolumesSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeVolumesSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeVolumesSetItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeVolumesSetItemType">
		    <xs:sequence>
		      <xs:element name="volumeId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeVolumes response definitions -->
		
		  <xs:element name="DescribeVolumesResponse"
		              type="tns:DescribeVolumesResponseType"/>
		  
		  <xs:complexType name="DescribeVolumesResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="volumeSet" type="tns:DescribeVolumesSetResponseType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeVolumesSetResponseType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeVolumesSetItemResponseType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeVolumesSetItemResponseType">
		    <xs:sequence>
		      <xs:element name="volumeId" type="xs:string"/>
		      <xs:element name="size" type="xs:string"/>
		      <xs:element name="snapshotId" type="xs:string"/>
		      <xs:element name="availabilityZone" type="xs:string"/>
		      <xs:element name="status" type="xs:string"/>
		      <xs:element name="createTime" type="xs:dateTime"/>
		      <xs:element name="attachmentSet" type="tns:AttachmentSetResponseType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="AttachmentSetResponseType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:AttachmentSetItemResponseType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="AttachmentSetItemResponseType">
		    <xs:sequence>
		      <xs:element name="volumeId" type="xs:string"/>
		      <xs:element name="instanceId" type="xs:string"/>
		      <xs:element name="device" type="xs:string"/>
		      <xs:element name="status" type="xs:string"/>
		      <xs:element name="attachTime" type="xs:dateTime"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- AttachVolume request definitions -->
		  
		  <xs:element name="AttachVolume" type="tns:AttachVolumeType"/>
		
		  <xs:complexType name="AttachVolumeType">
		    <xs:sequence>
		      <xs:element name="volumeId" type="xs:string"/>
		      <xs:element name="instanceId" type="xs:string"/>
		      <xs:element name="device" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- AttachVolume response definitions -->
		
		  <xs:element name="AttachVolumeResponse" type="tns:AttachVolumeResponseType"/>
		  
		  <xs:complexType name="AttachVolumeResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="volumeId" type="xs:string"/>
		      <xs:element name="instanceId" type="xs:string"/>
		      <xs:element name="device" type="xs:string"/>
		      <xs:element name="status" type="xs:string"/>
		      <xs:element name="attachTime" type="xs:dateTime"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DetachVolume request definitions -->
		  
		  <xs:element name="DetachVolume" type="tns:DetachVolumeType"/>
		
		  <xs:complexType name="DetachVolumeType">
		    <xs:sequence>
		      <xs:element name="volumeId" type="xs:string"/>
		      <xs:element name="instanceId" type="xs:string" minOccurs="0" maxOccurs="1"/>
		      <xs:element name="device" type="xs:string" minOccurs="0" maxOccurs="1"/>
		      <xs:element name="force" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DetachVolume response definitions -->
		
		  <xs:element name="DetachVolumeResponse" type="tns:DetachVolumeResponseType"/>
		  
		  <xs:complexType name="DetachVolumeResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="volumeId" type="xs:string"/>
		      <xs:element name="instanceId" type="xs:string"/>
		      <xs:element name="device" type="xs:string"/>
		      <xs:element name="status" type="xs:string"/>
		      <xs:element name="attachTime" type="xs:dateTime"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CreateSnapshot request definitions -->
		  
		  <xs:element name="CreateSnapshot" type="tns:CreateSnapshotType"/>
		
		  <xs:complexType name="CreateSnapshotType">
		    <xs:sequence>
		      <xs:element name="volumeId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CreateSnapshot response definitions -->
		
		  <xs:element name="CreateSnapshotResponse" type="tns:CreateSnapshotResponseType"/>
		  
		  <xs:complexType name="CreateSnapshotResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="snapshotId" type="xs:string"/>
		      <xs:element name="volumeId" type="xs:string"/>
		      <xs:element name="status" type="xs:string"/>
		      <xs:element name="startTime" type="xs:dateTime"/>
		      <xs:element name="progress" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeleteSnapshot request definitions -->
		  
		  <xs:element name="DeleteSnapshot" type="tns:DeleteSnapshotType"/>
		
		  <xs:complexType name="DeleteSnapshotType">
		    <xs:sequence>
		      <xs:element name="snapshotId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DeleteSnapshot response definitions -->
		
		  <xs:element name="DeleteSnapshotResponse" type="tns:DeleteSnapshotResponseType"/>
		  
		  <xs:complexType name="DeleteSnapshotResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="return" type="xs:boolean"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeSnapshots request definitions -->
		  
		  <xs:element name="DescribeSnapshots" 
		              type="tns:DescribeSnapshotsType" />
		
		  <xs:complexType name="DescribeSnapshotsType">
		    <xs:sequence>
		      <xs:element name="snapshotSet" type="tns:DescribeSnapshotsSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeSnapshotsSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeSnapshotsSetItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeSnapshotsSetItemType">
		    <xs:sequence>
		      <xs:element name="snapshotId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeSnapshots response definitions -->
		
		  <xs:element name="DescribeSnapshotsResponse"
		              type="tns:DescribeSnapshotsResponseType"/>
		  
		  <xs:complexType name="DescribeSnapshotsResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="snapshotSet" type="tns:DescribeSnapshotsSetResponseType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeSnapshotsSetResponseType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeSnapshotsSetItemResponseType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeSnapshotsSetItemResponseType">
		    <xs:sequence>
		      <xs:element name="snapshotId" type="xs:string"/>
		      <xs:element name="volumeId" type="xs:string"/>
		      <xs:element name="status" type="xs:string"/>
		      <xs:element name="startTime" type="xs:dateTime"/>
		      <xs:element name="progress" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- BundleInstance request definitions -->
		  
		  <xs:element name="BundleInstance" type="tns:BundleInstanceType"/>
		
		  <xs:complexType name="BundleInstanceType">
		    <xs:sequence>
		      <xs:element name="instanceId" type="xs:string"/>
		      <xs:element name="storage" type="tns:BundleInstanceTaskStorageType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="BundleInstanceTaskStorageType">
		    <xs:sequence>
		      <xs:element name="S3" type="tns:BundleInstanceS3StorageType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="BundleInstanceS3StorageType">
		    <xs:sequence>
		      <xs:element name="bucket" type="xs:string"/>
		      <xs:element name="prefix" type="xs:string"/>
		      <xs:element name="awsAccessKeyId" type="xs:string" minOccurs="0" />
		      <xs:element name="uploadPolicy" type="xs:string" minOccurs="0" />
		      <xs:element name="uploadPolicySignature" type="xs:string" minOccurs="0" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- BundleInstance response definitions -->
		
		  <xs:element name="BundleInstanceResponse" type="tns:BundleInstanceResponseType"/>
		  
		  <xs:complexType name="BundleInstanceResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="bundleInstanceTask" type="tns:BundleInstanceTaskType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="BundleInstanceTaskType">
		    <xs:sequence>
		      <xs:element name="instanceId" type="xs:string"/>
		      <xs:element name="bundleId" type="xs:string"/>
		      <xs:element name="state" type="xs:string"/>
		      <xs:element name="startTime" type="xs:dateTime"/>
		      <xs:element name="updateTime" type="xs:dateTime"/>
		      <xs:element name="storage" type="tns:BundleInstanceTaskStorageType"/>
		      <xs:element name="progress" type="xs:string" minOccurs="0"/>
		      <xs:element name="error" type="tns:BundleInstanceTaskErrorType" minOccurs="0"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="BundleInstanceTaskErrorType">
		    <xs:sequence>
		      <xs:element name="code" type="xs:string"/>
		      <xs:element name="message" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeBundleTasks request definitions -->
		
		  <xs:element name="DescribeBundleTasks" type="tns:DescribeBundleTasksType"/>
		
		  <xs:complexType name="DescribeBundleTasksType">
		    <xs:sequence>
		      <xs:element name="bundlesSet" type="tns:DescribeBundleTasksInfoType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeBundleTasksInfoType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeBundleTasksItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeBundleTasksItemType">
		    <xs:sequence>
		      <xs:element name="bundleId" type="xs:string" />
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeBundleTasks response definitions -->
		
		  <xs:element name="DescribeBundleTasksResponse" type="tns:DescribeBundleTasksResponseType"/>
		  
		  <xs:complexType name="DescribeBundleTasksResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="bundleInstanceTasksSet" type="tns:BundleInstanceTasksSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="BundleInstanceTasksSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:BundleInstanceTaskType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CancelBundleTask request definitions -->
		  
		  <xs:element name="CancelBundleTask" type="tns:CancelBundleTaskType"/>
		
		  <xs:complexType name="CancelBundleTaskType">
		    <xs:sequence>
		      <xs:element name="bundleId" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- CancelBundleTask response definitions -->
		
		  <xs:element name="CancelBundleTaskResponse" type="tns:CancelBundleTaskResponseType"/>
		  
		  <xs:complexType name="CancelBundleTaskResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="bundleInstanceTask" type="tns:BundleInstanceTaskType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeRegions Definitions -->
		
		  <xs:element name="DescribeRegions" 
		              type="tns:DescribeRegionsType" />
		
		  <xs:complexType name="DescribeRegionsType">
		    <xs:sequence>
		      <xs:element name="regionSet" type="tns:DescribeRegionsSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeRegionsSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:DescribeRegionsSetItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="DescribeRegionsSetItemType">
		    <xs:sequence>
		      <xs:element name="regionName" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <!-- DescribeRegions Response definitions -->
		
		  <xs:element name="DescribeRegionsResponse" 
		              type="tns:DescribeRegionsResponseType"/>
		
		  <xs:complexType name="DescribeRegionsResponseType">
		    <xs:sequence>
		      <xs:element name="requestId" type="xs:string"/>
		      <xs:element name="regionInfo" type="tns:RegionSetType"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="RegionSetType">
		    <xs:sequence>
		      <xs:element name="item" type="tns:RegionItemType" minOccurs="0" maxOccurs="unbounded"/>
		    </xs:sequence>
		  </xs:complexType>
		
		  <xs:complexType name="RegionItemType">
		    <xs:sequence>
		      <xs:element name="regionName" type="xs:string"/>
		      <xs:element name="regionEndpoint" type="xs:string"/>
		    </xs:sequence>
		  </xs:complexType>
		
		</xs:schema>
  </types>

  <!-- message definitions -->

  <message name="RegisterImageRequestMsg">
    <part name="RegisterImageRequestMsgReq" element="tns:RegisterImage" />
  </message>

  <message name="RegisterImageResponseMsg">
    <part name="RegisterImageResponseMsgResp" element="tns:RegisterImageResponse" />
  </message>

  <message name="DeregisterImageRequestMsg">
    <part name="DeregisterImageRequestMsgReq" element="tns:DeregisterImage" />
  </message>

  <message name="DeregisterImageResponseMsg">
    <part name="DeregisterImageResponseMsgResp" element="tns:DeregisterImageResponse" />
  </message>

  <message name="RunInstancesRequestMsg">
    <part name="RunInstancesRequestMsgReq" element="tns:RunInstances" />
  </message>

  <message name="RunInstancesResponseMsg">
    <part name="RunInstancesResponseMsgResp" element="tns:RunInstancesResponse" />
  </message>

  <message name="CreateKeyPairRequestMsg">
    <part name="CreateKeyPairRequestMsgReq" element="tns:CreateKeyPair" />
  </message>

  <message name="CreateKeyPairResponseMsg">
    <part name="CreateKeyPairResponseMsgResp" element="tns:CreateKeyPairResponse" />
  </message>

  <message name="DescribeKeyPairsRequestMsg">
    <part name="DescribeKeyPairsRequestMsgReq" element="tns:DescribeKeyPairs" />
  </message>

  <message name="DescribeKeyPairsResponseMsg">
    <part name="DescribeKeyPairsResponseMsgResp" element="tns:DescribeKeyPairsResponse" />
  </message>

  <message name="DeleteKeyPairRequestMsg">
    <part name="DeleteKeyPairRequestMsgReq" element="tns:DeleteKeyPair" />
  </message>

  <message name="DeleteKeyPairResponseMsg">
    <part name="DeleteKeyPairResponseMsgResp" element="tns:DeleteKeyPairResponse" />
  </message>

  <message name="GetConsoleOutputRequestMsg">
    <part name="GetConsoleOutputRequestMsgReq" element="tns:GetConsoleOutput" />
  </message>
  
  <message name="GetConsoleOutputResponseMsg">
    <part name="GetConsoleOutputResponseMsgResp" element="tns:GetConsoleOutputResponse" />
  </message>

  <message name="TerminateInstancesRequestMsg">
    <part name="TerminateInstancesRequestMsgReq" element="tns:TerminateInstances" />
  </message>
  
  <message name="TerminateInstancesResponseMsg">
    <part name="TerminateInstancesResponseMsgResp" element="tns:TerminateInstancesResponse" />
  </message>

  <message name="RebootInstancesRequestMsg">
    <part name="RebootInstancesRequestMsgReq" element="tns:RebootInstances" />
  </message>

  <message name="RebootInstancesResponseMsg">
    <part name="RebootInstancesRequestMsgResp" element="tns:RebootInstancesResponse" />
  </message>

  <message name="DescribeInstancesRequestMsg">
    <part name="DescribeInstancesRequestMsgReq" element="tns:DescribeInstances" />
  </message>

  <message name="DescribeInstancesResponseMsg">
    <part name="DescribeInstancesRequestMsgResp" element="tns:DescribeInstancesResponse" />
  </message>

  <message name="DescribeImagesRequestMsg">
    <part name="DescribeImagesRequestMsgReq" element="tns:DescribeImages" />
  </message>

  <message name="DescribeImagesResponseMsg">
    <part name="DescribeImagesRequestMsgResp" element="tns:DescribeImagesResponse" />
  </message>

  <message name="CreateSecurityGroupRequestMsg">
    <part name="CreateSecurityGroupRequestMsgReq" element="tns:CreateSecurityGroup" />
  </message>

  <message name="CreateSecurityGroupResponseMsg">
    <part name="CreateSecurityGroupRequestMsgResp" element="tns:CreateSecurityGroupResponse" />
  </message>

  <message name="DeleteSecurityGroupRequestMsg">
    <part name="DeleteSecurityGroupRequestMsgReq" element="tns:DeleteSecurityGroup" />
  </message>

  <message name="DeleteSecurityGroupResponseMsg">
    <part name="DeleteSecurityGroupRequestMsgResp" element="tns:DeleteSecurityGroupResponse" />
  </message>

  <message name="DescribeSecurityGroupsRequestMsg">
    <part name="DescribeSecurityGroupsRequestMsgReq" element="tns:DescribeSecurityGroups" />
  </message>

  <message name="DescribeSecurityGroupsResponseMsg">
    <part name="DescribeSecurityGroupsRequestMsgResp" element="tns:DescribeSecurityGroupsResponse" />
  </message>

  <message name="AuthorizeSecurityGroupIngressRequestMsg">
    <part name="AuthorizeSecurityGroupIngressRequestMsgReq" element="tns:AuthorizeSecurityGroupIngress" />
  </message>

  <message name="AuthorizeSecurityGroupIngressResponseMsg">
    <part name="AuthorizeSecurityGroupIngressRequestMsgResp" element="tns:AuthorizeSecurityGroupIngressResponse" />
  </message>

  <message name="RevokeSecurityGroupIngressRequestMsg">
    <part name="RevokeSecurityGroupIngressRequestMsgReq" element="tns:RevokeSecurityGroupIngress" />
  </message>

  <message name="RevokeSecurityGroupIngressResponseMsg">
    <part name="RevokeSecurityGroupIngressRequestMsgResp" element="tns:RevokeSecurityGroupIngressResponse" />
  </message>

  <message name="ModifyImageAttributeRequestMsg">
    <part name="ModifyImageAttributeRequestMsgReq" element="tns:ModifyImageAttribute" />
  </message>
  
  <message name="ModifyImageAttributeResponseMsg">
    <part name="ModifyImageAttributeRequestMsgResp" element="tns:ModifyImageAttributeResponse" />
  </message>
  
  <message name="ResetImageAttributeRequestMsg">
    <part name="ResetImageAttributeRequestMsgReq" element="tns:ResetImageAttribute" />
  </message>
  
  <message name="ResetImageAttributeResponseMsg">
    <part name="ResetImageAttributeRequestMsgResp" element="tns:ResetImageAttributeResponse" />
  </message>
  
  <message name="DescribeImageAttributeRequestMsg">
    <part name="DescribeImageAttributeRequestMsgReq" element="tns:DescribeImageAttribute" />
  </message>
  
  <message name="DescribeImageAttributeResponseMsg">
    <part name="DescribeImageAttributeRequestMsgResp" element="tns:DescribeImageAttributeResponse"/>
  </message>

  <message name="ConfirmProductInstanceRequestMsg">
    <part name="ConfirmProductInstanceRequestMsgReq" element="tns:ConfirmProductInstance"/>
  </message>

  <message name="ConfirmProductInstanceResponseMsg">
    <part name="ConfirmProductInstanceRequestMsgResp" element="tns:ConfirmProductInstanceResponse"/>
  </message>

  <message name="DescribeAvailabilityZonesRequestMsg">
    <part name="DescribeAvailabilityZonesRequestMsgReq" element="tns:DescribeAvailabilityZones"/>
  </message>

  <message name="DescribeAvailabilityZonesResponseMsg">
    <part name="DescribeAvailabilityZonesRequestMsgResp" element="tns:DescribeAvailabilityZonesResponse"/>
  </message>

  <message name="DescribeRegionsRequestMsg">
    <part name="DescribeRegionsRequestMsgReq" element="tns:DescribeRegions"/>
  </message>

  <message name="DescribeRegionsResponseMsg">
    <part name="DescribeRegionsRequestMsgResp" element="tns:DescribeRegionsResponse"/>
  </message>

  <message name='AllocateAddressRequestMsg'>
    <part name='AllocateAddressRequestMsgReq' element='tns:AllocateAddress'/>
  </message>
  
  <message name='AllocateAddressResponseMsg'>
    <part name='AllocateAddressResponseMsgResp' element='tns:AllocateAddressResponse'/>
  </message>

  <message name='ReleaseAddressRequestMsg'>
    <part name='ReleaseAddressRequestMsgReq' element='tns:ReleaseAddress'/>
  </message>

  <message name='ReleaseAddressResponseMsg'>
    <part name='ReleaseAddressResponseMsgResp' element='tns:ReleaseAddressResponse'/>
  </message>

  <message name='DescribeAddressesRequestMsg'>
    <part name='DescribeAddressesRequestMsgReq' element='tns:DescribeAddresses'/>
  </message>

  <message name='DescribeAddressesResponseMsg'>
    <part name='DescribeAddressesResponseMsgResp' element='tns:DescribeAddressesResponse'/>
  </message>

  <message name='AssociateAddressRequestMsg'>
    <part name='AssociateAddressRequestMsgReq' element='tns:AssociateAddress'/>
  </message>

  <message name='AssociateAddressResponseMsg'>
    <part name='AssociateAddressResponseMsgResp' element='tns:AssociateAddressResponse'/>
  </message>

  <message name='DisassociateAddressRequestMsg'>
    <part name='DisassociateAddressRequestMsgReq' element='tns:DisassociateAddress'/>
  </message>

  <message name='DisassociateAddressResponseMsg'>
    <part name='DisassociateAddressResponseMsgResp' element='tns:DisassociateAddressResponse'/>
  </message>

  <message name="CreateVolumeRequestMsg">
    <part name="CreateVolumeRequestMsgReq" element="tns:CreateVolume"/>
  </message>

  <message name="CreateVolumeResponseMsg">
    <part name="CreateVolumeRequestMsgResp" element="tns:CreateVolumeResponse"/>
  </message>

  <message name="DeleteVolumeRequestMsg">
    <part name="DeleteVolumeRequestMsgReq" element="tns:DeleteVolume"/>
  </message>

  <message name="DeleteVolumeResponseMsg">
    <part name="DeleteVolumeRequestMsgResp" element="tns:DeleteVolumeResponse"/>
  </message>

  <message name="DescribeVolumesRequestMsg">
    <part name="DescribeVolumesRequestMsgReq" element="tns:DescribeVolumes"/>
  </message>

  <message name="DescribeVolumesResponseMsg">
    <part name="DescribeVolumesRequestMsgResp" element="tns:DescribeVolumesResponse"/>
  </message>

  <message name="AttachVolumeRequestMsg">
    <part name="AttachVolumeRequestMsgReq" element="tns:AttachVolume"/>
  </message>

  <message name="AttachVolumeResponseMsg">
    <part name="AttachVolumeResponseMsgResp" element="tns:AttachVolumeResponse"/>
  </message>

  <message name="DetachVolumeRequestMsg">
    <part name="DetachVolumeRequestMsgReq" element="tns:DetachVolume"/>
  </message>

  <message name="DetachVolumeResponseMsg">
    <part name="DetachVolumeResponseMsgResp" element="tns:DetachVolumeResponse"/>
  </message>

  <message name="CreateSnapshotRequestMsg">
    <part name="CreateSnapshotRequestMsgReq" element="tns:CreateSnapshot"/>
  </message>

  <message name="CreateSnapshotResponseMsg">
    <part name="CreateSnapshotRequestMsgResp" element="tns:CreateSnapshotResponse"/>
  </message>

  <message name="DeleteSnapshotRequestMsg">
    <part name="DeleteSnapshotRequestMsgReq" element="tns:DeleteSnapshot"/>
  </message>

  <message name="DeleteSnapshotResponseMsg">
    <part name="DeleteSnapshotRequestMsgResp" element="tns:DeleteSnapshotResponse"/>
  </message>

  <message name="DescribeSnapshotsRequestMsg">
    <part name="DescribeSnapshotsRequestMsgReq" element="tns:DescribeSnapshots"/>
  </message>

  <message name="DescribeSnapshotsResponseMsg">
    <part name="DescribeSnapshotsRequestMsgResp" element="tns:DescribeSnapshotsResponse"/>
  </message>

  <message name="BundleInstanceRequestMsg">
    <part name="BundleInstanceRequestMsgReq" element="tns:BundleInstance" />
  </message>

  <message name="BundleInstanceResponseMsg">
    <part name="BundleInstanceResponseMsgResp" element="tns:BundleInstanceResponse" />
  </message>

  <message name="DescribeBundleTasksRequestMsg">
    <part name="DescribeBundleTasksRequestMsgReq" element="tns:DescribeBundleTasks" />
  </message>

  <message name="DescribeBundleTasksResponseMsg">
    <part name="DescribeBundleTasksResponseMsgResp" element="tns:DescribeBundleTasksResponse" />
  </message>

  <message name="CancelBundleTaskRequestMsg">
    <part name="CancelBundleTaskRequestMsgReq" element="tns:CancelBundleTask" />
  </message>

  <message name="CancelBundleTaskResponseMsg">
    <part name="CancelBundleTaskResponseMsgResp" element="tns:CancelBundleTaskResponse" />
  </message>

  <portType name="AmazonEC2PortType">
    <operation name="RegisterImage">
      <input message="tns:RegisterImageRequestMsg" />
      <output message="tns:RegisterImageResponseMsg" />
    </operation>
    <operation name="DeregisterImage">
      <input message="tns:DeregisterImageRequestMsg" />
      <output message="tns:DeregisterImageResponseMsg" />
    </operation>
    <operation name="RunInstances">
      <input message="tns:RunInstancesRequestMsg" />
      <output message="tns:RunInstancesResponseMsg" />
    </operation>
    <operation name="CreateKeyPair">
      <input message="tns:CreateKeyPairRequestMsg" />
      <output message="tns:CreateKeyPairResponseMsg" />
    </operation>
    <operation name="DescribeKeyPairs">
      <input message="tns:DescribeKeyPairsRequestMsg" />
      <output message="tns:DescribeKeyPairsResponseMsg" />
    </operation>
    <operation name="DeleteKeyPair">
      <input message="tns:DeleteKeyPairRequestMsg" />
      <output message="tns:DeleteKeyPairResponseMsg" />
    </operation>
    <operation name="GetConsoleOutput">
      <input message="tns:GetConsoleOutputRequestMsg" />
      <output message="tns:GetConsoleOutputResponseMsg" />
    </operation>
    <operation name="TerminateInstances">
      <input message="tns:TerminateInstancesRequestMsg" />
      <output message="tns:TerminateInstancesResponseMsg" />
    </operation>
    <operation name="RebootInstances">
      <input message="tns:RebootInstancesRequestMsg" />
      <output message="tns:RebootInstancesResponseMsg" />
    </operation>
    <operation name="DescribeInstances">
      <input message="tns:DescribeInstancesRequestMsg" />
      <output message="tns:DescribeInstancesResponseMsg" />
    </operation>
    <operation name="DescribeImages">
      <input message="tns:DescribeImagesRequestMsg" />
      <output message="tns:DescribeImagesResponseMsg" />
    </operation>
    <operation name="CreateSecurityGroup">
      <input message="tns:CreateSecurityGroupRequestMsg" />
      <output message="tns:CreateSecurityGroupResponseMsg" />
    </operation>
    <operation name="DeleteSecurityGroup">
      <input message="tns:DeleteSecurityGroupRequestMsg" />
      <output message="tns:DeleteSecurityGroupResponseMsg" />
    </operation>
    <operation name="DescribeSecurityGroups">
      <input message="tns:DescribeSecurityGroupsRequestMsg" />
      <output message="tns:DescribeSecurityGroupsResponseMsg" />
    </operation>
    <operation name="AuthorizeSecurityGroupIngress">
      <input message="tns:AuthorizeSecurityGroupIngressRequestMsg" />
      <output message="tns:AuthorizeSecurityGroupIngressResponseMsg" />
    </operation>
    <operation name="RevokeSecurityGroupIngress">
      <input message="tns:RevokeSecurityGroupIngressRequestMsg" />
      <output message="tns:RevokeSecurityGroupIngressResponseMsg" />
    </operation>
    <operation name="ModifyImageAttribute">
      <input message="tns:ModifyImageAttributeRequestMsg"/>
      <output message="tns:ModifyImageAttributeResponseMsg"/>
    </operation>
    <operation name="ResetImageAttribute">
      <input message="tns:ResetImageAttributeRequestMsg"/>
      <output message="tns:ResetImageAttributeResponseMsg"/>
    </operation>
    <operation name="DescribeImageAttribute">
      <input message="tns:DescribeImageAttributeRequestMsg"/>
      <output message="tns:DescribeImageAttributeResponseMsg"/>
    </operation>
    <operation name="ConfirmProductInstance">
      <input message="tns:ConfirmProductInstanceRequestMsg"/>
      <output message="tns:ConfirmProductInstanceResponseMsg"/>
    </operation>
    <operation name="DescribeAvailabilityZones">
      <input message="tns:DescribeAvailabilityZonesRequestMsg"/>
      <output message="tns:DescribeAvailabilityZonesResponseMsg"/>
    </operation>
    <operation name='AllocateAddress'>
      <input message='tns:AllocateAddressRequestMsg'/>
      <output message='tns:AllocateAddressResponseMsg'/>
    </operation>
    <operation name='ReleaseAddress'>
      <input message='tns:ReleaseAddressRequestMsg'/>
      <output message='tns:ReleaseAddressResponseMsg'/>
    </operation>
    <operation name='DescribeAddresses'>
      <input message='tns:DescribeAddressesRequestMsg'/>
      <output message='tns:DescribeAddressesResponseMsg'/>
    </operation>
    <operation name='AssociateAddress'>
      <input message='tns:AssociateAddressRequestMsg'/>
      <output message='tns:AssociateAddressResponseMsg'/>
    </operation>
    <operation name='DisassociateAddress'>
      <input message='tns:DisassociateAddressRequestMsg'/>
      <output message='tns:DisassociateAddressResponseMsg'/>
    </operation>
    <operation name="CreateVolume">
      <input message="tns:CreateVolumeRequestMsg"/>
      <output message="tns:CreateVolumeResponseMsg"/>
    </operation>
    <operation name="DeleteVolume">
      <input message="tns:DeleteVolumeRequestMsg"/>
      <output message="tns:DeleteVolumeResponseMsg"/>
    </operation>
    <operation name="DescribeVolumes">
      <input message="tns:DescribeVolumesRequestMsg"/>
      <output message="tns:DescribeVolumesResponseMsg"/>
    </operation>
    <operation name="AttachVolume">
      <input message="tns:AttachVolumeRequestMsg"/>
      <output message="tns:AttachVolumeResponseMsg"/>
    </operation>
    <operation name="DetachVolume">
      <input message="tns:DetachVolumeRequestMsg"/>
      <output message="tns:DetachVolumeResponseMsg"/>
    </operation>
    <operation name="CreateSnapshot">
      <input message="tns:CreateSnapshotRequestMsg"/>
      <output message="tns:CreateSnapshotResponseMsg"/>
    </operation>
    <operation name="DeleteSnapshot">
      <input message="tns:DeleteSnapshotRequestMsg"/>
      <output message="tns:DeleteSnapshotResponseMsg"/>
    </operation>
    <operation name="DescribeSnapshots">
      <input message="tns:DescribeSnapshotsRequestMsg"/>
      <output message="tns:DescribeSnapshotsResponseMsg"/>
    </operation>
    <operation name="BundleInstance">
      <input message="tns:BundleInstanceRequestMsg" />
      <output message="tns:BundleInstanceResponseMsg" />
    </operation>
    <operation name="DescribeBundleTasks">
      <input message="tns:DescribeBundleTasksRequestMsg" />
      <output message="tns:DescribeBundleTasksResponseMsg" />
    </operation>
    <operation name="CancelBundleTask">
      <input message="tns:CancelBundleTaskRequestMsg" />
      <output message="tns:CancelBundleTaskResponseMsg" />
    </operation>
    <operation name="DescribeRegions">
      <input message="tns:DescribeRegionsRequestMsg"/>
      <output message="tns:DescribeRegionsResponseMsg"/>
    </operation>
  </portType>

  <binding name="AmazonEC2Binding" type="tns:AmazonEC2PortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />

    <operation name="RegisterImage">
      <soap:operation soapAction="RegisterImage" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="DeregisterImage">
      <soap:operation soapAction="DeregisterImage" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="CreateKeyPair">
      <soap:operation soapAction="CreateKeyPair" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="DescribeKeyPairs">
      <soap:operation soapAction="DescribeKeyPairs" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="DeleteKeyPair">
      <soap:operation soapAction="DeleteKeyPair" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="RunInstances">
      <soap:operation soapAction="RunInstances" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="GetConsoleOutput">
      <soap:operation soapAction="GetConsoleOutput" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="TerminateInstances">
      <soap:operation soapAction="TerminateInstances" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="RebootInstances">
      <soap:operation soapAction="RebootInstances" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="DescribeInstances">
      <soap:operation soapAction="DescribeInstances" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="DescribeImages">
      <soap:operation soapAction="DescribeImages" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="CreateSecurityGroup">
      <soap:operation soapAction="CreateSecurityGroup" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="DeleteSecurityGroup">
      <soap:operation soapAction="DeleteSecurityGroup" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="DescribeSecurityGroups">
      <soap:operation soapAction="DescribeSecurityGroups" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="AuthorizeSecurityGroupIngress">
      <soap:operation soapAction="AuthorizeSecurityGroupIngress" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="RevokeSecurityGroupIngress">
      <soap:operation soapAction="RevokeSecurityGroupIngress" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="ModifyImageAttribute">
      <soap:operation soapAction="ModifyImageAttribute" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="ResetImageAttribute">
      <soap:operation soapAction="ResetImageAttribute" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="DescribeImageAttribute">
      <soap:operation soapAction="DescribeImageAttribute" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="ConfirmProductInstance">
      <soap:operation soapAction="ConfirmProductInstance" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

    <operation name="DescribeAvailabilityZones">
      <soap:operation soapAction="DescribeAvailabilityZones" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

    <operation name='AllocateAddress'>
      <soap:operation soapAction='AllocateAddress'/>
      <input>
        <soap:body use='literal'/>
      </input>
      <output>
        <soap:body use='literal'/>
      </output>
    </operation>

    <operation name='ReleaseAddress'>
      <soap:operation soapAction='ReleaseAddress'/>
      <input>
        <soap:body use='literal'/>
      </input>
      <output>
        <soap:body use='literal'/>
      </output>
    </operation>

    <operation name='DescribeAddresses'>
      <soap:operation soapAction='DescribeAddresses'/>
      <input>
        <soap:body use='literal'/>
      </input>
      <output>
        <soap:body use='literal'/>
      </output>
    </operation>

    <operation name='AssociateAddress'>
      <soap:operation soapAction='AssociateAddress'/>
      <input>
        <soap:body use='literal'/>
      </input>
      <output>
        <soap:body use='literal'/>
      </output>
    </operation>

    <operation name='DisassociateAddress'>
      <soap:operation soapAction='DisassociateAddress'/>
      <input>
        <soap:body use='literal'/>
      </input>
      <output>
        <soap:body use='literal'/>
      </output>
    </operation>

    <operation name="CreateVolume">
      <soap:operation soapAction="CreateVolume" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="DeleteVolume">
      <soap:operation soapAction="DeleteVolume" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="DescribeVolumes">
      <soap:operation soapAction="DescribeVolumes" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="AttachVolume">
      <soap:operation soapAction="AttachVolume" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="DetachVolume">
      <soap:operation soapAction="DetachVolume" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="CreateSnapshot">
      <soap:operation soapAction="CreateSnapshot" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="DeleteSnapshot">
      <soap:operation soapAction="DeleteSnapshot" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
    <operation name="DescribeSnapshots">
      <soap:operation soapAction="DescribeSnapshots" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>

    <operation name="BundleInstance">
      <soap:operation soapAction="BundleInstance" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="DescribeBundleTasks">
      <soap:operation soapAction="DescribeBundleTasks" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="CancelBundleTask">
      <soap:operation soapAction="CancelBundleTask" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>

    <operation name="DescribeRegions">
      <soap:operation soapAction="DescribeRegions" />
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    
  </binding>

  <service name="AmazonEC2">
    <port name="AmazonEC2Port" binding="tns:AmazonEC2Binding">
      <soap:address location="https://ec2.amazonaws.com/" />
    </port>
  </service>

</definitions>
